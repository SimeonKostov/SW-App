{"version":3,"sources":["containers/reducers.js","components/header/HeaderLogo.js","components/header/HeaderContainer.js","components/mainContent/options.js","containers/actions.js","containers/constants.js","containers/sideBar/SearchBox.js","containers/sideBar/SideBarOption.js","components/sideBar/SideBar.js","components/mainContent/SWHero.js","components/mainContent/SWPlanet.js","containers/resultList/ResultsList.js","components/mainContent/GeneralContainer.js","components/app/App.js","serviceWorker.js","index.js","components/header/logo.png"],"names":["initialContentState","isPending","type","content","error","initialSearchState","searchField","initialRecordingState","isRecording","stream","audio","HeaderLogo","react_default","a","createElement","className","src","logo","alt","HeaderContainer","header_HeaderLogo","Component","options","requestContent","dispatch","fetch","concat","then","response","json","payload","catch","err","SearchBox","_this$props","this","props","onSearch","onStartRecording","onStopRecording","onChange","placeholder","connect","state","voiceRecording","event","search","target","value","text","token","recognizeMic","objectMode","extractResults","format","on","data","console","log","e","stop","bind","SideBarOption","onContentChange","option","id","onClick","toUpperCase","SideBar","sideBar_SearchBox","map","sideBar_SideBarOption","key","SWHero","_ref","name","by","style","border","color","SWPlanet","terrain","gravity","climate","population","ResultsList","onRender","filteredContent","filter","element","toLowerCase","includes","el","mainContent_SWHero","birth_year","mainContent_SWPlanet","GeneralContainer","sideBar_SideBar","resultList_ResultsList","App","header_HeaderContainer","mainContent_GeneralContainer","Boolean","window","location","hostname","match","rootReducer","combineReducers","arguments","length","undefined","action","Object","assign","results","store","createStore","applyMiddleware","thunkMiddleware","logger","ReactDOM","render","es","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.79f5a893.chunk.js","sourcesContent":["import {REQUEST_CONTENT_PENDING, \r\n        REQUEST_CONTENT_SUCCESS, \r\n        REQUEST_CONTENT_FAILED, \r\n        CHANGE_SEARCH_FIELD, \r\n        START_VOICE_RECORDING, \r\n        STOP_VOICE_RECORDING} from './constants';\r\n\r\nconst initialContentState={\r\n    isPending: true,\r\n    type: '',\r\n    content: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestContent=(state=initialContentState, action={})=>{\r\n    switch(action.type){\r\n        case REQUEST_CONTENT_PENDING:\r\n            return Object.assign({}, state, {isPending: true});\r\n        case REQUEST_CONTENT_SUCCESS:\r\n            return Object.assign({}, state, {isPending: false, type: action.payload.type, content: action.payload.content.results});\r\n        case REQUEST_CONTENT_FAILED:\r\n            return Object.assign({}, state, {isPending: false, error: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialSearchState={\r\n    searchField: ''\r\n}\r\n\r\nexport const onSearch=(state=initialSearchState, action={})=>{\r\n    switch(action.type){\r\n        case CHANGE_SEARCH_FIELD:\r\n            return Object.assign({}, state, {searchField: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialRecordingState={\r\n    isRecording: false,\r\n    stream: {},\r\n    audio: {}\r\n}\r\n\r\nexport const voiceRecording=(state=initialRecordingState, action={})=>{\r\n    switch(action.type){\r\n        case START_VOICE_RECORDING:\r\n            // console.log(action.payload.stream);\r\n            return Object.assign({}, state, {isRecording: true, stream: action.payload.stream});\r\n        case STOP_VOICE_RECORDING:\r\n            return Object.assign({}, state, {isRecording: false})\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport logo from './logo.png';\r\n\r\nconst HeaderLogo=()=>{\r\n    return(\r\n       <div className='header-logo'>\r\n           <img src={logo} alt='Star Wars logo'></img>\r\n       </div> \r\n    )\r\n}\r\n\r\nexport default HeaderLogo;","import React, {Component} from 'react';\r\nimport HeaderLogo from '../../components/header/HeaderLogo';\r\nimport './header.css';\r\n\r\nclass HeaderContainer extends Component{\r\n    render(){\r\n        return(\r\n            <div className='header'>\r\n                <HeaderLogo />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderContainer;\r\n","const options=['people', 'planets', 'species', 'vehicles', 'starships'];\r\n\r\nexport default options;","import {REQUEST_CONTENT_PENDING, \r\n        REQUEST_CONTENT_SUCCESS,\r\n        REQUEST_CONTENT_FAILED, \r\n        CHANGE_SEARCH_FIELD,\r\n        START_VOICE_RECORDING, \r\n        STOP_VOICE_RECORDING} from './constants';\r\nimport recognizeMic from 'watson-speech/speech-to-text/recognize-microphone';\r\n\r\nexport const requestContent=(dispatch, type)=>{\r\n    dispatch({type: REQUEST_CONTENT_PENDING});\r\n    fetch(`https://swapi.co/api/${type}/?format=json`)\r\n    .then(response=>response.json())\r\n    .then(content=>dispatch({type: REQUEST_CONTENT_SUCCESS, payload:{type: type, content: content}}))\r\n    .catch(err=>dispatch({type: REQUEST_CONTENT_FAILED, payload: err}));\r\n}\r\n\r\nexport const onSearch=(dispatch, search)=>{\r\n    dispatch({type: CHANGE_SEARCH_FIELD, payload: search});\r\n}\r\n\r\nexport const onStartRecording=(dispatch)=>{\r\n    fetch('http://localhost:3002/api/speech-to-text/token')\r\n    .then(function(response) {\r\n        return response.text();\r\n    }).then(function (token) {\r\n        var stream = recognizeMic({\r\n            token: token, // use `access_token` as the parameter name if using an RC service\r\n            objectMode: true, // send objects instead of text\r\n            extractResults: true, // convert {results: [{alternatives:[...]}], result_index: 0} to {alternatives: [...], index: 0}\r\n            format: false // optional - performs basic formatting on the results such as capitals an periods\r\n        });\r\n\r\n        stream.on('data', function(data) {\r\n            console.log(\"asdf\");\r\n            console.log(data);\r\n        });\r\n\r\n        stream.on('error', function(err) {\r\n            console.log(err);\r\n        });\r\n        //document.querySelector('#stop').onclick = stream.stop.bind(stream);\r\n        dispatch({type: START_VOICE_RECORDING, payload:{stream: stream}});\r\n    }).catch(function(error) {\r\n        console.log(error);\r\n    });\r\n}\r\n\r\nexport const onStopRecording=(dispatch, stream)=>{\r\n    stream.stop.bind(stream);\r\n    dispatch({type: STOP_VOICE_RECORDING});\r\n}\r\n\r\n","export const REQUEST_CONTENT_PENDING='REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_CONTENT_SUCCESS='REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_CONTENT_FAILED='REQUEST_ROBOTS_FAILED';\r\n\r\nexport const CHANGE_SEARCH_FIELD='CHANGE_SEARCH_FIELD';\r\n\r\nexport const START_VOICE_RECORDING='START_VOICE_RECORDING';\r\nexport const STOP_VOICE_RECORDING='STOP_VOICE_RECORDING';\r\nexport const REQUEST_TRANSCRIPTION_PENDING='REQUEST_TRANSCRIPTION_PENDING';\r\nexport const REQUEST_TRANSCRIPTION_SUCCESS='REQUEST_TRANSCRIPTION_SUCCESS';\r\nexport const REQUEST_TRANSCRIPTION_FAILED='REQUEST_TRANSCRIPTION_FAILED';","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {onSearch, onStartRecording, onStopRecording} from '../actions';\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return{\r\n        searchField: state.onSearch.searchField,\r\n        isRecording: state.voiceRecording.isRecording,\r\n        stream: state.voiceRecording.stream,\r\n        audio: state.voiceRecording.audio\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        onSearch: (event)=>onSearch(dispatch, event.target.value),\r\n        onStartRecording: ()=>onStartRecording(dispatch),\r\n        onStopRecording: (stream, e)=>onStopRecording(dispatch, stream, e)\r\n    }\r\n}\r\n\r\nclass SearchBox extends Component {\r\n    render(){\r\n        const {onSearch, onStartRecording, stream, onStopRecording}=this.props;\r\n        return(\r\n            <div className='mt3 mb3 w-20'>\r\n                <input type='search' className='b--white b--solid br2 ba-l ph1 bg-black yellow' onChange={onSearch} placeholder=\"type a name\"></input>\r\n                \r\n                {/* SpeechRecognition api don't work for now */}\r\n                {/* <button onMouseDown={onStartRecording} onMouseUp={(e)=>onStopRecording(stream, e)}>Hold</button> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBox);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport 'tachyons';\r\n\r\nimport {requestContent} from '../actions';\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        isPending: state.requestContent.isPending,\r\n        type: state.requestContent.type,\r\n        content: state.requestContent.content,\r\n        error: state.requestContent.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        onContentChange: (event)=>requestContent(dispatch, event.target.id)\r\n    }\r\n}\r\nclass SideBarOption extends Component{\r\n    render(){\r\n        const {onContentChange, option}=this.props;\r\n        return(\r\n            <div className='w-50'>\r\n                <p className=\"option\" id={option} onClick={onContentChange}>{option.toUpperCase()}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SideBarOption);","import React,{Component} from 'react';\r\nimport SearchBox from '../../containers/sideBar/SearchBox';\r\nimport SideBarOption from '../../containers/sideBar/SideBarOption';\r\nimport 'tachyons';\r\n\r\nclass SideBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className='w-25 pa3'>\r\n                <SearchBox />\r\n                 {\r\n                     this.props.options.map(option=>{\r\n                         return <SideBarOption key={option} option={option}/>\r\n                     })\r\n                 }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst SWHero=({name, by})=>{\r\n    return(\r\n        <div className='tc dib h5 pa2 mr2 mb2 br4-l grow bg-black' style={{border: '2px solid #f1c40f'}}>\r\n            <img src={`https://robohash.org/${name}?size=150x150`} alt='avatar'></img>\r\n            <h4 style={{color: 'white'}}>{name}</h4>\r\n            <p style={{color: 'white'}}>{by}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SWHero;","import React from 'react';\r\nimport 'tachyons';\r\n\r\nconst SWPlanet=({name, terrain, gravity, climate, population })=>{\r\n    return(\r\n        <div className='tc dib h5 pa2 pt4 mr2 mb2 br4-l grow bg-navy' style={{border: '2px solid #f1c40f'}}>\r\n            {/* <img src={`https://robohash.org/${name}?size=150x150`} alt='avatar'></img> */}\r\n            <h4 className='yellow'>{name}</h4>\r\n            <p className='green'>terrain: {terrain}</p>\r\n            <p className='orange'>gravity: {gravity}</p>\r\n            <p className='pink'>climate: {climate}</p>\r\n            <p className='gold'>population: {population}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SWPlanet;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport SWHero from '../../components/mainContent/SWHero';\r\nimport SWPlanet from '../../components/mainContent/SWPlanet';\r\nimport 'tachyons';\r\n\r\nimport {requestContent} from '../actions';\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        isPending: state.requestContent.isPending,\r\n        type: state.requestContent.type,\r\n        content: state.requestContent.content,\r\n        error: state.requestContent.error,\r\n        searchField: state.onSearch.searchField\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        onRender: ()=>requestContent(dispatch, 'people')\r\n    }\r\n}\r\n\r\nclass ResultsList extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.onRender();\r\n    }\r\n\r\n    render(){\r\n        const {isPending, content, type, searchField}=this.props;\r\n\r\n        const filteredContent=content.filter(element=>{\r\n            return element.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n\r\n        if(isPending){\r\n            return(\r\n                <div className='tc w-75'>\r\n                    <h1 className='yellow'>Loading...</h1>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className='tc w-75'>\r\n                    <h1 className='yellow'>{type.toUpperCase()}</h1>\r\n                   {\r\n                    (type === 'people' || type === 'planets') ?\r\n                    filteredContent.map(el=>{\r\n                        switch(type){\r\n                            case 'people':\r\n                                return (\r\n                                    <SWHero key={el.name} name={el.name} by={el.birth_year}/>\r\n                                );\r\n                            case 'planets':\r\n                                return (\r\n                                    <SWPlanet key={el.name} name={el.name} terrain={el.terrain} gravity={el.gravity} \r\n                                    climate={el.climate} population={el.population}/>\r\n                                );\r\n                            default:\r\n                                return null;\r\n                        }\r\n                    })\r\n                    :\r\n                    <div>\r\n                        <img src={'https://robohash.org/oops?set=set2&size=300x300'} alt='Oops..'></img>\r\n                        <h2 className='white'>Oops... Something went wrong</h2>\r\n                    </div>  \r\n                   }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsList);\r\n","import React from 'react';\r\nimport options from './options';\r\nimport SideBar from '../sideBar/SideBar';\r\nimport 'tachyons';\r\nimport './general.css';\r\nimport ResultsList from '../../containers/resultList/ResultsList';\r\n\r\nconst GeneralContainer=()=>{\r\n    return(\r\n        <div className='flex flex-wrap'>\r\n            <SideBar options={options}/>\r\n            <ResultsList/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GeneralContainer;\r\n","import React from 'react';\r\nimport HeaderContainer from '../header/HeaderContainer';\r\nimport GeneralContainer from '../mainContent/GeneralContainer';\r\n\r\nconst App =()=>{\r\n    return(\r\n        <div>\r\n            <HeaderContainer />\r\n            <GeneralContainer />    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {requestContent, onSearch, voiceRecording} from './containers/reducers';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst rootReducer=combineReducers({requestContent, onSearch, voiceRecording});\r\nconst store=createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nReactDOM.render(<Provider store={store}>\r\n                    <App />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.93895aa2.png\";"],"sourceRoot":""}